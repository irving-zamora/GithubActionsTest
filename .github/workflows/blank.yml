name: Build, Test, Comment PR Coverage Go Plugin

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GO_VERSION: '1.20' # The Go version to use

permissions:
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with: 
        go-version: ${{ env.GO_VERSION}}

    - name: Build Go Plugin
      run: |
        cd src/custom-go-plugin
        docker compose run --rm tyk-plugin-compiler RateLimitingPlugin.so
        mv -f ./go/src/RateLimitingPlugin*.so ./tyk/middleware/RateLimitingPlugin.so

    - name: Run Tests and Generate Coverage
      continue-on-error: true
      run: |
        go install github.com/jstemmer/go-junit-report@latest
        cd ./src/custom-go-plugin/go/src/
        go test -v -coverprofile=coverage.txt ./...
        go tool cover -func=coverage.txt > coverage_summary.txt
        go tool cover -html=coverage.txt -o coverage.html
        go tool cover -func=coverage.txt > junit-report.xml
       
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: test-coverage
        path: |
          /home/runner/work/GithubActionsTest/GithubActionsTest/src/custom-go-plugin/go/src/coverage_summary.txt
          /home/runner/work/GithubActionsTest/GithubActionsTest/src/custom-go-plugin/go/src/coverage.txt
          /home/runner/work/GithubActionsTest/GithubActionsTest/src/custom-go-plugin/go/src/coverage.html
          /home/runner/work/GithubActionsTest/GithubActionsTest/src/custom-go-plugin/go/src/junit-report.xml

    - name: Jest Coverage Comment
      uses: MishaKav/jest-coverage-comment@main
      with: 
       title: Coverage Report
       badge-title: Coverage
       create-new-comment: true
       junitxml-path: /home/runner/work/GithubActionsTest/GithubActionsTest/src/custom-go-plugin/go/src/junit-report.xml
       
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        append: true
        recreate: true
        message: This is your comment message.
        path: |
          /home/runner/work/GithubActionsTest/GithubActionsTest/src/custom-go-plugin/go/src/coverage_summary.txt
          /home/runner/work/GithubActionsTest/GithubActionsTest/src/custom-go-plugin/go/src/coverage.txt
          /home/runner/work/GithubActionsTest/GithubActionsTest/src/custom-go-plugin/go/src/junit-report.xml
