name: Build, Bundle, Release Go Plugin

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GO_VERSION: '1.20' # The Go version to use

permissions:
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with: 
        go-version: ${{ env.GO_VERSION}}

    - name: Build Go Plugin
      run: |
        cd src/custom-go-plugin
        docker compose run --rm tyk-plugin-compiler RateLimitingPlugin.so
        mv -f ./go/src/RateLimitingPlugin*.so ./tyk/middleware/RateLimitingPlugin.so

    - name: Run Tests and Generate Coverage
      continue-on-error: true
      run: |
        cd ./src/custom-go-plugin/go/src/
        go test -v -coverprofile=coverage.txt ./...
        go test -v ./... | go-junit-report > junit-report.xml
        go tool cover -func=coverage.txt > coverage_summary.txt
        
    - name: Upload Go test results
      uses: actions/upload-artifact@v3
      with:
        name: Go-results-${{ matrix.go-version }}
        path: TestResults-${{ matrix.go-version }}.json

    - name: Run go-junit-report
      run: |
       go install github.com/jstemmer/go-junit-report@latest
       cd ./src/custom-go-plugin/go/src/
       go test -v -json ./... > test-output.json
       go generate ./...
       go test -v ./... | go-junit-report < test-output.json > test-report.xml
       
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: test-coverage
        path: |
          /home/runner/work/GithubActionsTest/GithubActionsTest/src/custom-go-plugin/go/src/coverage.txt
          /home/runner/work/GithubActionsTest/GithubActionsTest/src/custom-go-plugin/go/src/coverage.html
          /home/runner/work/GithubActionsTest/GithubActionsTest/src/custom-go-plugin/go/src/junit-report.xml
          /home/runner/work/GithubActionsTest/GithubActionsTest/src/custom-go-plugin/go/src/test-report.xml

    - name: Comment on Pull Request with Coverage Report and JUnit XML
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        message: |
          Test Results:
       
          [View Function-Level Coverage Report](artifact:coverage-func.html)
          [View JUnit XML Report](artifact:test-report.xml)
          
        GITHUB_TOKEN: sadfmo
        
    - name: Upload JUnit XML Report
      uses: actions/upload-artifact@v2
      with:
        name: test-report
        path: test-report.xml
